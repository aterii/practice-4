// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                  String               @id @default(uuid())
  email               String               @unique
  password            String
  name                String?
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  preferences         UserPreferences?
  comparisons         Comparison[]
  criteriaComparisons CriteriaComparison[]
}

model UserPreferences {
  id                 String   @id @default(uuid())
  userId             String   @unique
  user               User     @relation(fields: [userId], references: [id])
  usagePurpose       String // JSON string of purposes array
  maxBudget          Float
  bodyType           String // JSON string of body types array
  fuelType           String // JSON string of fuel types array
  transmission       String // JSON string of transmission types array
  driveType          String // JSON string of drive types array
  minPower           Int?
  maxFuelConsumption Float?
  safetyFeatures     String // JSON string of safety features array
  comfortFeatures    String // JSON string of comfort features array
  criteriaWeights    String? // JSON string of weights
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Comparison {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  carId     Int
  score     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Car {
  id                Int      @id
  brand             String
  model             String
  year              Int
  price             Float
  bodyType          String
  fuelType          String
  transmission      String
  driveType         String
  power             Int
  fuelConsumption   Float
  safetyFeatures    String // JSON string of safety features array
  comfortFeatures   String // JSON string of comfort features array
  capacity          Int
  maintenanceCost   Float
  additionalOptions String // JSON string of additional options array
  imageUrl          String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model CriteriaComparison {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  matrix      String // JSON string of NxN matrix
  weights     String // JSON string of weights array
  consistency Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
